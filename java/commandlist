# how to compile the java code with external jar file
javac -cp jarfile source file
# how to compile and run the java code
javac file.java (-verbose)
# now the class file will be generated, just running the executable code using the following command even if the file format is class
java file
# how to make a jar file with the class files (not sure what the manifest.txt is used for here)
jar -cvmf manifest.txt name.jar *.class
# how to check if two custom classes are equal in java
Like c++, you need to override the == or equals by yourself using hashcode, but == can check if the two objects are the same instane.
# how to convert List<Integer> to int[] in java
list.stream().mapToInt(Integer::intValue).toArray(); // list is the name of the List<Integer>
# how to initialize an ArrayList with an array in java
new ArrayList<>(Arrays.asList(array))  // maybe note the mutual conversion of Array and List in java
# how to iterate through the hashmap in java
// for keys
for (Object key: map.keySet())
// for values
for (Object value: map.values())
# how to initialize a HashSet with an array of string in java
String[] array = new String[] {"a", "b"};
Set<String> h = new HashSet<>(Arrays.asList(array));
# the following approach is equivalent to the above one
Set<String> h = new HashSet<>(Arrays.asList("a", "b"));
# how to iterate all the characters in a string
for  (char c: s.toCharArray())
# how to fill an array with all the same value
Arrays.fill(array, val);
# StringBuilder is a useful structure, e.g. can be used for concatenating multiple chars to a string
char c1 = 'a';
char c2 = 'b';
char c3 = 'c';
StringBuilder sb = new StringBuilder();
sb.append(c1);
sb.append(c2);
sb.append(c3);
sb.toString();
# how to clear a StringBuilder: set the length to 0 or new a new StringBuilder
myStringBuilder.setLength(0);
# how to check if a char is digit or letter in java
Character.isLetter()
Character.isDigit()
# how to get the element by index in a list in java
list.get(index)
# getOrDefault() seems useful for HashMap 
# HashSet cannot guarantee any order so you can use LinkedHashSet instead to retain the order
# how to convert int[] to Integer[]
List<Integer> list = IntStream.of(a).boxed().collect(Collectors.toList());
# how to remove the last element of an array in java
Arrays.copyOf(original, original.length-1)
# Is the loop through an array by reference or copying?
Seems it's a copy here and the original array stays unchanged
# how to reverse an List in java
Collections.reverse(list);
# how to merge two ArrayLists in java
a1.addAll(a2);
# how to find a substring or a character in one string in java
Using indexOf(substring/char, indexFrom)
